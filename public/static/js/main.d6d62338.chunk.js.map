{"version":3,"sources":["components/Layout/Header.tsx","components/Layout/Main.tsx","components/Layout/Footer.tsx","components/Gallery/Image.tsx","components/Gallery/GalleryTabs.tsx","components/Search/Search.tsx","components/Gallery/Gallery.tsx","components/Preloader/Preloader.tsx","api/api.ts","App.tsx","reportWebVitals.ts","theme.js","index.tsx"],"names":["useStyles","makeStyles","title","flexGrow","classes","AppBar","position","Toolbar","Typography","variant","className","theme","footer","backgroundColor","palette","primary","main","color","contrastText","root","background","paper","padding","spacing","Main","props","Container","maxWidth","children","createStyles","margin","display","height","breakpoints","down","flexDirection","alignItems","textAlign","details","content","flex","cover","width","minWidth","minHeight","chip","whiteSpace","overflow","textOverflow","boxSizing","Image","photo","id","server","farm","secret","tags","description","url","tagsArr","split","Card","CardMedia","image","CardContent","component","map","tag","Chip","label","size","marginBottom","TABS","icon","type","GalleryTabs","onChangeSelectedTab","React","useState","selectedTab","setSelectedTab","Tabs","value","onChange","event","newValue","find","tab","indicatorColor","textColor","aria-label","index","Tab","input","marginLeft","iconButton","Search","searchAction","placeholder","liveSearch","searchValue","setSearchValue","typingTimeout","setTypingTimeout","onChangeAction","target","clearTimeout","setTimeout","Paper","onSubmit","e","preventDefault","IconButton","disabled","InputBase","Box","p","Gallery","images","onChangeSearchQuery","Grid","container","item","xs","md","wrapper","loader","PreloaderWithViewport","handleViewport","visible","onBecomeVisible","inViewport","forwardedRef","useEffect","ref","LinearProgress","hidden","photosAPI","page","text","maxDate","axios","get","then","response","data","App","isLoading","setIsLoading","photoList","setPhotoList","searchQuery","setSearchQuery","setPage","Date","now","date","setDate","isLastPage","setIsLastPage","appInited","setAppInited","console","log","uploadMorePhotos","window","addEventListener","handleScroll","removeEventListener","a","resetPage","resetSearch","resetPhotos","nextPage","requestImages","stat","photos","pages","newPhotos","filter","newArrElem","listArrElem","length","error","emptySearch","Header","handleTabChange","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","createMuiTheme","typography","useNextVariants","secondary","success","contrastThreshold","tonalOffset","ReactDOM","render","StrictMode","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.d6d62338.chunk.js","sourcesContent":["import React from 'react';\nimport {AppBar, Typography, Toolbar} from \"@material-ui/core\";\nimport {makeStyles} from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles({\n    title: {\n        flexGrow: 1,\n    },\n});\n\nexport default () => {\n    const classes = useStyles();\n    return (\n        <AppBar position=\"static\">\n            <Toolbar>\n                <Typography variant=\"h6\" className={classes.title}>\n                    Header\n                </Typography>\n            </Toolbar>\n        </AppBar>\n    )\n}\n\n","import React, {FC} from 'react';\nimport {Container} from \"@material-ui/core\";\nimport {makeStyles} from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        flexGrow: 1,\n        backgroundColor: theme.palette.background.paper,\n        padding: theme.spacing(4, 0)\n\n    }\n}));\n\ninterface IMain  {\n    children: any\n}\n\nconst Main:FC<IMain> = props => {\n    const classes = useStyles()\n\n    return (\n        <Container maxWidth=\"lg\"  className={classes.root}>\n            {props.children}\n        </Container>\n    )\n};\n\nexport default Main\n\n","import React from 'react';\nimport {Container, Typography} from \"@material-ui/core\";\nimport {makeStyles} from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles(theme => ({\n    footer: {\n        backgroundColor: theme.palette.primary.main,\n        color: theme.palette.primary.contrastText\n    },\n}));\n\nconst Footer = () => {\n    const classes = useStyles();\n    return (\n        <footer className={classes.footer}>\n            <Container maxWidth={false}>\n                <Typography variant=\"h6\">\n                    Footer\n                </Typography>\n            </Container>\n        </footer>\n    )\n};\n\nexport default Footer;\n\n","import React, {FC} from 'react';\r\nimport { Theme, createStyles, makeStyles } from '@material-ui/core/styles';\r\nimport {Card, Chip, CardContent, CardMedia, Typography} from '@material-ui/core/';\r\nimport {IPhotoType} from \"../../types/types\";\r\n\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            margin: `${theme.spacing(2)} 0`,\r\n            display: 'flex',\r\n            height: \"100%\",\r\n            [theme.breakpoints.down(480)]: {\r\n                flexDirection: 'column',\r\n                alignItems: 'center',\r\n                textAlign: 'center'\r\n            },\r\n        },\r\n        details: {\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n        },\r\n        content: {\r\n            flex: '1 0 auto',\r\n        },\r\n        cover: {\r\n            height: 150,\r\n            width: 150,\r\n            minWidth: 150,\r\n            minHeight: 150,\r\n        },\r\n        chip: {\r\n            margin: '5px 5px 0 0',\r\n            maxWidth: '80%',\r\n            whiteSpace: 'nowrap',\r\n            overflow: 'hidden',\r\n            textOverflow: 'ellipsis',\r\n            boxSizing: 'border-box'\r\n        }\r\n    }),\r\n);\r\n\r\ninterface IImage {\r\n    photo: IPhotoType\r\n}\r\n\r\nconst Image:FC<IImage> = ({photo}) => {\r\n    const classes = useStyles()\r\n    const {id, farm, server, secret, title, description, tags} = photo\r\n    const url = `https://live.staticflickr.com/${server}/${id}_${secret}_q.jpg`;\r\n    const tagsArr = tags ? tags.split(' ') : [];\r\n\r\n    return (\r\n        <Card className={classes.root}>\r\n            <CardMedia\r\n                className={classes.cover}\r\n                image={url}\r\n                title={title}\r\n            />\r\n            <div className={classes.details}>\r\n                <CardContent className={classes.content}>\r\n                    <Typography component=\"div\" variant=\"subtitle1\" >\r\n                        {title}\r\n                    </Typography>\r\n                    {/*{description && description._content &&*/}\r\n                    {/*    <Typography component=\"div\" variant=\"subtitle2\">{description._content}</Typography>*/}\r\n                    {/*}*/}\r\n                    {tagsArr.map(tag => <Chip variant=\"outlined\" color=\"primary\" label={tag} key={tag} size=\"small\" className={classes.chip}/>)}\r\n                </CardContent>\r\n            </div>\r\n        </Card>\r\n    );\r\n};\r\n\r\n\r\nexport default Image\r\n","import React, { FC } from 'react';\r\nimport { makeStyles, Theme } from '@material-ui/core/styles';\r\nimport {AppBar, Tabs, Tab} from '@material-ui/core';\r\nimport { SearchIcon, AccessTimeIcon } from '../Icons/MeterialIcons';\r\nimport {SelectedTabType} from \"../../types/types\";\r\n\r\nfunction getTabProps(index: any) {\r\n    return {\r\n        id: `gallery-tab-${index}`,\r\n        'aria-controls': `gallery-tabpanel-${index}`,\r\n    };\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n    root: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        marginBottom: theme.spacing(4)\r\n    },\r\n}));\r\n\r\ntype ITabs = {\r\n    id: number,\r\n    label: string,\r\n    icon: any,\r\n    type: 'recent' | 'search'\r\n}\r\n\r\nconst TABS:ITabs[] = [\r\n    {\r\n        id: 0,\r\n        label: 'Recent',\r\n        icon: <AccessTimeIcon/>,\r\n        type: 'recent'\r\n    }, {\r\n        id: 1,\r\n        label: 'Search',\r\n        icon: <SearchIcon/>,\r\n        type: 'search'\r\n    }\r\n];\r\n\r\ninterface IGalleryTabs {\r\n    onChangeSelectedTab: (tab: SelectedTabType) => void,\r\n}\r\n\r\nconst GalleryTabs:FC<IGalleryTabs> = ({onChangeSelectedTab}) => {\r\n    const classes = useStyles();\r\n    const [selectedTab, setSelectedTab] = React.useState(0);\r\n\r\n    const handleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\r\n        const selectedTab = TABS.find(tab => tab.id === newValue);\r\n        if(selectedTab) {\r\n            onChangeSelectedTab(selectedTab.type);\r\n        }\r\n        setSelectedTab(newValue);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <AppBar position=\"static\" color=\"default\">\r\n                <Tabs\r\n                    value={selectedTab}\r\n                    onChange={handleChange}\r\n                    indicatorColor=\"primary\"\r\n                    textColor=\"primary\"\r\n                    variant=\"fullWidth\"\r\n                    aria-label=\"gallery tabs\"\r\n                >\r\n                    {TABS.map(({id, icon, label, type}) => <Tab key={type} icon={icon} label={label} {...getTabProps(id)} />)}\r\n                </Tabs>\r\n            </AppBar>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default GalleryTabs\r\n","import React, {FC, useState} from \"react\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Box, Typography} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        marginBottom: theme.spacing(1),\r\n        padding: '2px 4px',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        width: '100%',\r\n        backgroundColor: 'rgba(255, 255, 255, 0.7)',\r\n    },\r\n    input: {\r\n        marginLeft: theme.spacing(1),\r\n        flex: 1,\r\n        color: theme.palette.primary.main\r\n    },\r\n    iconButton: {\r\n        padding: 10,\r\n        color: theme.palette.primary.main\r\n    },\r\n}));\r\n\r\ninterface ISearch {\r\n    searchAction: (value: string) => void,\r\n    placeholder: string,\r\n    liveSearch: boolean\r\n}\r\n\r\nconst Search:FC<ISearch> = ({searchAction, placeholder, liveSearch}) => {\r\n    const classes = useStyles();\r\n    const [searchValue, setSearchValue] = useState('');\r\n    const [typingTimeout, setTypingTimeout] = useState<any>(null);\r\n\r\n    const handleLiveChange = ({target: {value}}: any)  => {\r\n        if (typingTimeout) {\r\n            clearTimeout(typingTimeout);\r\n        }\r\n        setSearchValue(value);\r\n\r\n        setTypingTimeout(setTimeout( () => {\r\n            searchAction(value);\r\n        }, 300));\r\n\r\n    };\r\n\r\n    const handleChange = ({target: {value}}: any) => {\r\n        setSearchValue(value);\r\n    };\r\n\r\n    const handleSubmit = (e: any) => {\r\n        if(!searchValue) {\r\n            return false\r\n        }\r\n        e.preventDefault();\r\n        searchAction(searchValue);\r\n    };\r\n\r\n    const onChangeAction = liveSearch ? handleLiveChange : handleChange;\r\n\r\n    return (\r\n        <>\r\n            <Paper component=\"form\" className={classes.root} onSubmit={handleSubmit}>\r\n                <IconButton type=\"submit\" className={classes.iconButton} aria-label=\"search\" disabled={!searchValue}>\r\n                    <SearchIcon/>\r\n                </IconButton>\r\n                <InputBase\r\n                    onChange={onChangeAction}\r\n                    className={classes.input}\r\n                    placeholder={placeholder}\r\n                    value={searchValue}\r\n\r\n                />\r\n            </Paper>\r\n            <Box p={2}>P.S: according to docs photos who's\r\n                <Typography color=\"secondary\" component=\"span\"> title, description or tags </Typography>\r\n                contain the text will be returned. </Box>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default Search;\r\n","import React, {FC} from 'react';\r\nimport Image from \"./Image\";\r\nimport {Container, Grid} from '@material-ui/core';\r\nimport GalleryTabs from \"./GalleryTabs\";\r\nimport Search from \"../Search/Search\";\r\nimport {IPhotoType, SelectedTabType} from \"../../types/types\";\r\n\r\ninterface IGallery {\r\n    images: IPhotoType[],\r\n    onChangeSelectedTab: (tab: SelectedTabType) => void,\r\n    onChangeSearchQuery: (value: string) => void,\r\n    selectedTab: SelectedTabType\r\n}\r\n\r\nconst Gallery:FC<IGallery> = ({images, selectedTab, onChangeSelectedTab, onChangeSearchQuery}) => {\r\n    return (\r\n        <Container maxWidth=\"lg\">\r\n            <GalleryTabs onChangeSelectedTab={onChangeSelectedTab}/>\r\n\r\n            {selectedTab === 'search' &&\r\n                <Search\r\n                  placeholder=\"Search for cats...\"\r\n                  liveSearch={true}\r\n                  searchAction={onChangeSearchQuery}\r\n                />\r\n            }\r\n\r\n            <Grid container spacing={2}>\r\n                {images.map((photo:IPhotoType) => (\r\n                  <Grid item xs={12} md={6} key={photo.id}>\r\n                    <Image photo={photo}/>\r\n                  </Grid>\r\n                ))}\r\n            </Grid>\r\n        </Container>\r\n    )\r\n};\r\n\r\nexport default Gallery;\r\n","import React, {FC, RefObject, useEffect} from 'react'\r\nimport { Theme, createStyles, makeStyles } from '@material-ui/core/styles'\r\nimport {LinearProgress} from '@material-ui/core/'\r\nimport {Container} from \"@material-ui/core\";\r\nimport handleViewport from 'react-in-viewport';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        wrapper: {\r\n            height: 100,\r\n            display: 'flex',\r\n            alignItems: 'center'\r\n        },\r\n        loader: {\r\n            width: '100%'\r\n        }\r\n    }),\r\n)\r\n\r\ninterface IPreloader {\r\n    visible: boolean,\r\n    onBecomeVisible: () => void,\r\n    inViewport: boolean,\r\n    forwardedRef: RefObject<HTMLDivElement>\r\n}\r\n\r\nconst Preloader:FC<IPreloader> = ({visible, onBecomeVisible, inViewport, forwardedRef}) => {\r\n    const classes = useStyles()\r\n\r\n    useEffect(() => {\r\n        if(inViewport) {\r\n            onBecomeVisible();\r\n        }\r\n    }, [inViewport]);\r\n\r\n\r\n    return (\r\n        <Container maxWidth=\"lg\">\r\n            <div className={classes.wrapper} ref={forwardedRef}>\r\n                <LinearProgress className={classes.loader} hidden={!visible}/>\r\n            </div>\r\n        </Container>\r\n    );\r\n};\r\n\r\nconst PreloaderWithViewport = handleViewport(Preloader);\r\n\r\nexport default PreloaderWithViewport;\r\n","import axios from \"axios\";\r\nimport { RequestPhotosType } from \"../types/types\";\r\n\r\nexport const photosAPI = {\r\n    getPhotos: ({type, page, text, maxDate}:RequestPhotosType) => {\r\n        return axios.get(`/api/photos?type=${type}&page=${page}&text=${text}&maxDate=${maxDate}`)\r\n            .then(response => response.data)\r\n    },\r\n};\r\n","import React, {useEffect, useState} from 'react';\nimport {Header, Main} from \"./components/Layout\";\nimport Gallery from \"./components/Gallery/Gallery\";\nimport Preloader from './components/Preloader/Preloader';\nimport {photosAPI} from \"./api/api\";\nimport {IPhotoType, RequestPhotosType, SelectedTabType} from './types/types';\n\n\nconst App = () => {\n    const [isLoading, setIsLoading] = useState(false);\n    const [selectedTab, setSelectedTab] = useState<SelectedTabType>('recent');\n    const [photoList, setPhotoList] = useState<IPhotoType[]>([]);\n    const [searchQuery, setSearchQuery] = useState<string>('');\n    const [page, setPage] = useState<number>(0);\n    const [date, setDate] = useState<number>(Date.now());\n    const [isLastPage, setIsLastPage] = useState<boolean>(false);\n    const [appInited, setAppInited] = useState(false);\n\n    useEffect(() => {\n        console.log('date: ' + date)\n    }, [date]);\n\n    useEffect(() => {\n        if(appInited) {\n            setDate(Date.now());  // fix time to avoid duplicates while scrolling\n            // (images are updating in real time and pages can be another in some seconds)\n            // unfortunately only 'search' supports extra prop 'max_upload_date'\n            // so for 'recent' we need filter manually\n            uploadMorePhotos(true, true, true)\n        }\n    }, [selectedTab]);\n\n    useEffect(() => {\n        if(appInited) {\n            uploadMorePhotos(true, false, true)\n        }\n    }, [searchQuery]);\n\n    useEffect(() => {\n        window.addEventListener(\"scroll\", handleScroll);\n        setAppInited(true);\n        return () => {\n            window.removeEventListener(\"scroll\", handleScroll);\n        }\n    }, []);\n\n    const uploadMorePhotos = async (resetPage = false, resetSearch = false, resetPhotos = false) => {\n        if(!isLastPage && !isLoading) {\n            const nextPage = resetPage ? 1 : page + 1;\n            await requestImages({\n                type: selectedTab,\n                page: nextPage,\n                text: resetSearch ? '' : searchQuery,\n                maxDate: date,\n                resetPhotos\n            });\n\n        }\n    }\n\n\n    const requestImages = async (data: RequestPhotosType & {resetPhotos: boolean}) => {\n        try {\n            setIsLoading(true);\n\n            if(!searchQuery && selectedTab === 'search') {\n                setIsLastPage(false);\n                setPage(page);\n                setPhotoList([]);\n            } else {\n                const {stat, photos} = await photosAPI.getPhotos(data);\n\n                if (stat === 'ok')  {\n                    const {page, pages, photo} = photos;\n\n                    const newPhotos = selectedTab === 'recent' ? photo.filter((newArrElem:IPhotoType) => {\n                        return photoList.filter((listArrElem) => {\n                            return listArrElem.id === newArrElem.id;\n                        }).length === 0\n                    }) : photo;\n\n                    setIsLastPage(page === pages);\n                    setPage(page);\n                    setPhotoList(data.resetPhotos ? [...photo] :  [...photoList, ...newPhotos]);\n                }\n            }\n\n        }\n        catch (e) {\n            console.error(e);\n        } finally {\n            setIsLoading(false)\n        }\n    };\n\n    const handleTabChange  = (tab: SelectedTabType) => {\n        setSelectedTab(tab)\n    }\n\n    const handleScroll = (e: any) => {\n        console.log('scroll event')\n    }\n\n    const emptySearch =  !searchQuery && selectedTab === 'search';\n\n    return (\n            <>\n                <Header/>\n                <Main>\n                    <Gallery\n                        images={photoList}\n                        selectedTab={selectedTab}\n                        onChangeSelectedTab={(tab: SelectedTabType) => handleTabChange(tab)}\n                        onChangeSearchQuery={(value: string) => setSearchQuery(value)}\n                    />\n\n                    {!isLastPage && <Preloader\n                      visible={!emptySearch}\n                      onBecomeVisible={() => uploadMorePhotos()}\n                    />\n                    }\n\n                </Main>\n            </>\n        );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createMuiTheme } from '@material-ui/core/styles';\r\n\r\nexport default createMuiTheme({\r\n    typography: {\r\n        useNextVariants: true,\r\n    },\r\n    palette: {\r\n        type: 'light',\r\n        primary: {\r\n            main: '#7e57c2'\r\n        },\r\n        secondary: {\r\n            main: '#ec407a',\r\n        },\r\n        success: {\r\n            main: '#00B294',\r\n        },\r\n        background: '#f5f5f5',\r\n        error: {\r\n            main: '#E81123'\r\n        },\r\n        contrastThreshold: 3,\r\n        tonalOffset: 0.2,\r\n        contrastText: '#fff',\r\n        text: {\r\n            primary: '#333',\r\n        },\r\n    }\r\n});\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {ThemeProvider} from '@material-ui/styles';\nimport theme from './theme'\n\nReactDOM.render(\n  <React.StrictMode>\n      <ThemeProvider theme={theme}>\n          <App/>\n      </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}